bdd:
  # the git secret name used to find the git user and token
  gitSecret: tekton-git

  # the git organisation used to create quickstarts inside. Defaults to the git user
  owner: ""

  # the git server host
  gitServerHost: "github.com"

  # the name of the quickstart to test
  quickstart: golang

command:
  shell: bash

  # the git URL containing the BDD tests
  gitUrl: https://github.com/jenkins-x/bdd-jx3

  # the command to download go mods
  goModDownload: go mod download

  # setup git
  setup: jx gitops git setup

  # run the actual BDD test inside the git clone
  test: |
    make test-quickstart-golang-http

image:
  repository: ghcr.io/jenkins-x/jx-go
  tag: "3.1.211"
  pullPolicy: IfNotPresent


jxgoRepository: ghcr.io/jenkins-x/jx-go
jxgoTag: "3.1.235"

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  name: "jx-bdd"
  # a map of annotations to add to the ServiceAccount
  annotations: {}

# define environment variables here as a map of key: value
env:
  XDG_CONFIG_HOME: /home/config

  JX_DISABLE_DELETE_APP: "true"
  JX_DISABLE_DELETE_REPO: "true"

  # increase the timeout for complete PipelineActivity
  BDD_TIMEOUT_PIPELINE_ACTIVITY_COMPLETE: "60"

  # we don't yet update the PipelineActivity.spec.pullTitle on previews....
  BDD_DISABLE_PIPELINEACTIVITY_CHECK: "true"

  # disable checking for PipelineActivity status == Succeeded for now while we fix up a timing issue
  BDD_ASSERT_ACTIVITY_SUCCEEDED: "false"


# a map of annotations to add to the pod
podAnnotations: {}

jobAnnotations: {}

resources:
  limits:
    cpu: 4
    memory: 6144Mi
  requests:
    cpu: 1
    memory: 2048Mi

nodeSelector: {}

tolerations: []

affinity: {}

terminationGracePeriodSeconds: 30

activeDeadlineSeconds: 12000

backoffLimit: 0

# default is Always but for Jobs use Never or OnFailure
restartPolicy: Never

clusterrole:
  rules:
  - apiGroups:
    - ""
    resources:
    - pods
    - pods/log
    - secrets
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list
  - apiGroups:
    - tekton.dev
    resources:
    - pipelines
    - pipelineruns
    - tasks
    - taskruns
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - deployments
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    - "networking.k8s.io" # k8s 1.14+
    resources:
    - ingresses
    verbs:
    - get
    - list
    - watch
